(()=>{"use strict";var e={424:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([e.id,"body{\r\n  background-color: rgb(237, 239, 223);\r\n}\r\n\r\na{\r\n  text-decoration: none;\r\n}\r\n\r\n\r\n.button{\r\n  border-radius: 5px;\r\n  margin: 5px,2px;\r\n  \r\n}\r\n\r\n.car-road{\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.line  {\r\n  border-top: 1px dashed #000; /* Параметры линии */\r\n  height: 5px; /* Высота блока */\r\n  \r\n }\r\n\r\n .car{\r\n  position: relative;\r\n  left: -1px;\r\n }\r\n\r\n .header{\r\n  position: relative;\r\n  margin-left: 15px;\r\n }\r\n\r\n #current-page{\r\n  margin-left: 7px;\r\n }\r\n\r\n .winner-message{\r\n  position: absolute;\r\n  font-size: 30px;\r\n  top: 20vh;\r\n  left: 45vw;\r\n  z-index: 10;\r\n }\r\n\r\n .time:hover, .wins:hover{\r\n  cursor: pointer;\r\n }\r\n\r\n .finish{\r\n  margin-right: 55px;\r\n }","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,oCAAoC;AACtC;;AAEA;EACE,qBAAqB;AACvB;;;AAGA;EACE,kBAAkB;EAClB,eAAe;;AAEjB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,2BAA2B,EAAE,oBAAoB;EACjD,WAAW,EAAE,iBAAiB;;CAE/B;;CAEA;EACC,kBAAkB;EAClB,UAAU;CACX;;CAEA;EACC,kBAAkB;EAClB,iBAAiB;CAClB;;CAEA;EACC,gBAAgB;CACjB;;CAEA;EACC,kBAAkB;EAClB,eAAe;EACf,SAAS;EACT,UAAU;EACV,WAAW;CACZ;;CAEA;EACC,eAAe;CAChB;;CAEA;EACC,kBAAkB;CACnB",sourcesContent:["body{\r\n  background-color: rgb(237, 239, 223);\r\n}\r\n\r\na{\r\n  text-decoration: none;\r\n}\r\n\r\n\r\n.button{\r\n  border-radius: 5px;\r\n  margin: 5px,2px;\r\n  \r\n}\r\n\r\n.car-road{\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.line  {\r\n  border-top: 1px dashed #000; /* Параметры линии */\r\n  height: 5px; /* Высота блока */\r\n  \r\n }\r\n\r\n .car{\r\n  position: relative;\r\n  left: -1px;\r\n }\r\n\r\n .header{\r\n  position: relative;\r\n  margin-left: 15px;\r\n }\r\n\r\n #current-page{\r\n  margin-left: 7px;\r\n }\r\n\r\n .winner-message{\r\n  position: absolute;\r\n  font-size: 30px;\r\n  top: 20vh;\r\n  left: 45vw;\r\n  z-index: 10;\r\n }\r\n\r\n .time:hover, .wins:hover{\r\n  cursor: pointer;\r\n }\r\n\r\n .finish{\r\n  margin-right: 55px;\r\n }"],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},548:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(379),a=t.n(r),o=t(795),i=t.n(o),s=t(569),c=t.n(s),d=t(565),l=t.n(d),u=t(216),p=t.n(u),g=t(589),m=t.n(g),f=t(424),h={};h.styleTagTransform=m(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=p(),a()(f.Z,h);const v=f.Z&&f.Z.locals?f.Z.locals:void 0},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],s=0;s<e.length;s++){var c=e[s],d=r.base?c[0]+r.base:c[0],l=o[d]||0,u="".concat(d," ").concat(l);o[d]=l+1;var p=t(u),g={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(g);else{var m=a(g,r);r.byIndex=s,n.splice(s,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=t(o[i]);n[s].references--}for(var c=r(e,a),d=0;d<o.length;d++){var l=t(o[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},478:function(e,n){var t=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(a,o){function i(e){try{c(r.next(e))}catch(e){o(e)}}function s(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,s)}c((r=r.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.updateWinners=n.winnersCount=n.pageWinners=n.saveWinner=n.getWinners=n.updateWinner=n.createWinner=n.delWinner=n.getWinnerStatus=n.getWinner=n.drive=n.stopEng=n.startEng=n.updateCars=n.cars=n.page=n.delCar=n.getCar=n.updateCar=n.createCar=n.getCars=void 0;const r="http://127.0.0.1:3000",a=`${r}/garage`,o=`${r}/engine`,i=`${r}/winners`;n.getCars=(e,n=7)=>t(void 0,void 0,void 0,(function*(){const t=yield fetch(`${a}?_page=${e}&_limit=${n}`);return{items:yield t.json(),count:t.headers.get("X-Total-Count")}})),n.createCar=e=>t(void 0,void 0,void 0,(function*(){const n=yield fetch(a,{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}});return yield n.json()})),n.updateCar=e=>t(void 0,void 0,void 0,(function*(){const n=yield fetch(`${a}/${e.id}`,{method:"PUT",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}});return yield n.json()})),n.getCar=e=>t(void 0,void 0,void 0,(function*(){const n=yield fetch(`${a}/${e}`);return yield n.json()})),n.delCar=e=>t(void 0,void 0,void 0,(function*(){const n=yield fetch(`${a}/${e}`,{method:"DELETE"});return yield n.json()})),n.page=1,n.cars=(0,n.getCars)(n.page),n.updateCars=function(e){return t(this,void 0,void 0,(function*(){n.page+=e,n.page<1&&(n.page=1),n.cars=(0,n.getCars)(n.page).then((e=>{e.count&&(n.page=+e.count/7<=n.page-1?n.page-1:n.page)})).then((()=>(0,n.getCars)(n.page)))}))},n.startEng=e=>t(void 0,void 0,void 0,(function*(){return(yield fetch(`${o}?id=${e}&status=started`,{method:"PATCH"})).json()})),n.stopEng=e=>t(void 0,void 0,void 0,(function*(){return(yield fetch(`${o}?id=${e}&status=stopped`,{method:"PATCH"})).json()})),n.drive=e=>t(void 0,void 0,void 0,(function*(){const n=yield fetch(`${o}?id=${e}&status=drive`,{method:"PATCH"}).catch();return console.log("status",n.status),200!=n.status?{succsess:!1}:Object.assign({},yield n.json())})),n.getWinner=e=>t(void 0,void 0,void 0,(function*(){const n=yield fetch(`${i}/${e}`);return yield n.json()})),n.getWinnerStatus=e=>t(void 0,void 0,void 0,(function*(){return(yield fetch(`${i}/${e}`)).status})),n.delWinner=e=>t(void 0,void 0,void 0,(function*(){const n=yield fetch(`${i}/${e}`,{method:"DELETE"});return yield n.json()})),n.createWinner=e=>t(void 0,void 0,void 0,(function*(){const n=yield fetch(i,{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}});return yield n.json()})),n.updateWinner=e=>t(void 0,void 0,void 0,(function*(){const n=yield fetch(`${i}/${e.id}`,{method:"PUT",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}});return yield n.json()})),n.getWinners=(e,r=10,a,o)=>t(void 0,void 0,void 0,(function*(){const s=yield fetch(`${i}?_page=${e}&_limit=${r}${((e,n)=>e&&n?`&_sort=${e}&_order=${n}`:"")(a,o)}`),c=yield s.json();return{items:yield Promise.all(c.map((e=>t(void 0,void 0,void 0,(function*(){return Object.assign(Object.assign({},e),{car:yield(0,n.getCar)(e.id)})}))))),count:s.headers.get("X-Total-Count")}})),n.saveWinner=({id:e,time:r})=>t(void 0,void 0,void 0,(function*(){if(404===(yield(0,n.getWinnerStatus)(e)))yield(0,n.createWinner)({id:e,wins:1,time:r});else{const t=yield(0,n.getWinner)(e);yield(0,n.updateWinner)({id:e,wins:t.wins+1,time:r<t.time?r:t.id})}})),n.pageWinners=1,n.winnersCount=(0,n.getWinners)(n.pageWinners,10,"wins","ASC"),n.updateWinners=function(e,r,a){return t(this,void 0,void 0,(function*(){n.pageWinners+=e,n.pageWinners<1&&(n.pageWinners=1),n.winnersCount=(0,n.getWinners)(n.pageWinners,10,r,a).then((e=>{e.count&&(n.pageWinners=+e.count/10<=n.pageWinners-1?n.pageWinners-1:n.pageWinners)})).then((()=>(0,n.getWinners)(n.pageWinners,10,r,a)))}))}},600:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.Header=void 0;const r=t(88),a=[{id:"garage",buttonText:"Garage"},{id:"winners",buttonText:"Winners"}],o=document.createElement("h2");o.textContent="Async Race";class i extends r.Component{constructor(e,n){super(e,n)}renderPage(){const e=document.createElement("div"),n=document.createElement("div");n.classList.add("winner-message"),a.forEach((n=>{const t=document.createElement("button");t.classList.add("button");const r=document.createElement("a");r.href=`#${n.id}`,r.textContent=n.buttonText,t.append(r),e.append(t)})),this.container.append(o),this.container.append(e),this.container.append(n)}render(){return this.renderPage(),this.container}}n.Header=i},88:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.Component=void 0,n.Component=class{constructor(e,n){this.container=document.createElement(e),this.container.className=n}render(){return this.container}}},978:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.Page=void 0,n.Page=class{constructor(e,n){this.container=document.createElement("div"),this.container.id=e,this.page=n||"0"}createTitle(e,n){const t=document.createElement(e);return t.innerText=n,t}remove(){this.container=document.createElement("div")}render(){return this.container}}},181:function(e,n,t){var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(a,o){function i(e){try{c(r.next(e))}catch(e){o(e)}}function s(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,s)}c((r=r.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.animationCar=n.pagination=n.selectRemove=n.createUpdate=n.colorOfCarInput=n.nameOfCarInput=n.formData=void 0;const a=t(478),o=t(478),i=t(257),s=t(637),c=document.body;let d,l,u,p,g,m=[];const f=document.getElementsByClassName("winner-message");let h="ASC",v="wins";n.nameOfCarInput="",n.colorOfCarInput="",n.createUpdate=()=>{c.addEventListener("submit",(e=>r(void 0,void 0,void 0,(function*(){e.preventDefault();const t=document.getElementById("create-form");t instanceof HTMLFormElement&&(n.formData=new FormData(t));const r=n.formData.get("name"),s=n.formData.get("color");r&&(n.nameOfCarInput=null==r?void 0:r.toString()),s&&(n.colorOfCarInput=null==s?void 0:s.toString()),e.target instanceof Element&&e.target.classList.contains("create-form")&&(yield(0,o.createCar)({name:r?null==r?void 0:r.toString():"",color:s?null==s?void 0:s.toString():"#000000"}).then((()=>(0,a.updateCars)(0))).then((()=>{i.App.renderPage("garage",!0)})));const c=document.getElementById("update-form");c instanceof HTMLFormElement&&(d=new FormData(c));const u=d.get("name"),p=d.get("color");e.target instanceof Element&&e.target.classList.contains("update-form")&&(0,o.updateCar)({name:u?null==u?void 0:u.toString():"",color:p?null==p?void 0:p.toString():"#000000",id:l.id}).then((()=>(0,a.updateCars)(0))).then((()=>{i.App.renderPage("garage",!0)}))}))))},n.selectRemove=()=>{c.addEventListener("click",(e=>r(void 0,void 0,void 0,(function*(){if(e.target instanceof Element){if(e.target.classList.contains("select-car-button")){l=yield(0,a.getCar)(+e.target.id);const n=document.getElementById("update-color");n instanceof HTMLInputElement&&n&&(n.disabled=!1,n.value=l.color);const t=document.getElementById("update-input");t instanceof HTMLInputElement&&t&&(t.disabled=!1,t.value=l.name);const r=document.getElementById("update-button");r instanceof HTMLButtonElement&&r&&(r.disabled=!1)}if(e.target.classList.contains("remove-car-button")&&(u=yield(0,a.getCar)(+e.target.id/1e3),yield(0,a.delCar)(u.id),(0,a.updateCars)(0),i.App.renderPage("garage",!0),(0,a.delWinner)(+e.target.id/1e3),(0,o.updateWinners)(0,"wins","ASC")),e.target.classList.contains("car-start-button")){const t=parseInt(e.target.id),r=document.getElementById(`${t}-start`),o=document.getElementById(`${t}-stop`);r instanceof HTMLButtonElement&&r&&(r.disabled=!0),o instanceof HTMLButtonElement&&o&&(o.disabled=!1),p=yield(0,a.startEng)(t),m[t]=(0,n.animationCar)(t,p.velocity,p.distance),yield(0,a.drive)(t).then((e=>{!1===e.succsess&&cancelAnimationFrame(m[t].id)}))}if(e.target.classList.contains("race-button")&&(m=[],f[0].textContent=" ",(yield a.cars).items.forEach((e=>r(void 0,void 0,void 0,(function*(){p=yield(0,a.startEng)(e.id);const t=yield(0,a.getCar)(e.id);m[e.id]=(0,n.animationCar)(e.id,p.velocity,p.distance,t.name),yield(0,a.drive)(e.id).then((n=>{!1===n.succsess&&cancelAnimationFrame(m[e.id].id)}))}))))),e.target.classList.contains("car-stop-button")){const n=parseInt(e.target.id),t=document.getElementById(`${n}-start`),r=document.getElementById(`${n}-stop`);t instanceof HTMLButtonElement&&t&&(t.disabled=!1),r instanceof HTMLButtonElement&&r&&(r.disabled=!0),g=yield(0,a.stopEng)(n),cancelAnimationFrame(m[n].id);const o=document.getElementById(`${n}-car`);o&&(o.style.left="-1px")}e.target.classList.contains("reset-button")&&((yield a.cars).items.forEach((e=>r(void 0,void 0,void 0,(function*(){g=yield(0,a.stopEng)(e.id),cancelAnimationFrame(m[e.id].id);const n=document.getElementById(`${e.id}-car`);n&&(n.style.left="-1px")})))),f[0].textContent="")}}))))},n.pagination=()=>{c.addEventListener("click",(e=>r(void 0,void 0,void 0,(function*(){e.target instanceof Element&&e.target.classList.contains("prev-button")&&((0,a.updateCars)(-1),i.App.renderPage("garage",!0)),e.target instanceof Element&&e.target.classList.contains("next-button")&&((0,a.updateCars)(1),i.App.renderPage("garage",!0)),e.target instanceof Element&&e.target.classList.contains("nextWin-button")&&((0,o.updateWinners)(1,v,h),i.App.renderPage("winners",!0)),e.target instanceof Element&&e.target.classList.contains("prevWin-button")&&((0,o.updateWinners)(-1,v,h),i.App.renderPage("winners",!0)),e.target instanceof Element&&e.target.classList.contains("generate-cars-button")&&(yield(0,s.generateHundreedCars)(),yield(0,a.updateCars)(0),i.App.renderPage("garage",!0)),e.target instanceof Element&&e.target.classList.contains("wins")&&(h="ASC"===h?"DESC":"ASC",v="wins",yield(0,o.updateWinners)(0,v,h),i.App.renderPage("winners",!0)),e.target instanceof Element&&e.target.classList.contains("time")&&(h="ASC"===h?"DESC":"ASC",v="time",yield(0,o.updateWinners)(0,"time",h),i.App.renderPage("winners",!0))}))))},n.animationCar=(e,n,t,r)=>{const i={id:0,time:0};let s=0;const c=document.getElementById(`${e}-car`);return i.time=t/n,i.id=window.requestAnimationFrame((function d(){let l=document.body.clientWidth-75,u=t/n;if(s+=l/u*30,c&&(c.style.left=s+"px"),s<l&&(i.id=window.requestAnimationFrame(d)),s>=l&&" "===f[0].textContent&&r){f[0].textContent=`${r} went first with ${(u/1e3).toFixed(2)} sec`;let n=+(u/1e3).toFixed(2);(0,a.saveWinner)({id:e,time:n}).then((()=>(0,o.updateWinners)(0,"wins","ASC")))}})),i}},257:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.App=void 0;const r=t(597),a=t(706),o=t(600),i=t(181);let s=null;class c{constructor(){this.initialPage=new r.Garage("garage"),this.header=new o.Header("header","header")}static renderPage(e,n=!1){const t=document.querySelector(`#${c.defaultPageId}`);if(t&&t.remove(),t&&!0===n&&t.remove(),"garage"===e?s=new r.Garage(e):"winners"===e&&(s=new a.Winners(e)),s){const e=s.render();e.id=c.defaultPageId,c.container.append(e)}}routeChange(){window.addEventListener("hashchange",(()=>{const e=window.location.hash.slice(1);c.renderPage(e)}))}run(){c.container.append(this.header.render());const e=window.location.hash.slice(1);c.renderPage(e),this.routeChange(),(0,i.createUpdate)(),(0,i.selectRemove)(),(0,i.pagination)()}}n.App=c,c.container=document.body,c.defaultPageId="current-page"},843:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.tableOfWin=n.lineContainer=n.carImage2=n.buttonsBlockTwo=n.buttonsBlock=n.inputBlock=void 0,n.inputBlock=(e,n=!1)=>`\n<div>\n  <form id="${e}-form" class="${e}-form">\n    <input id="${e}-input" type="text" class="${e}-text ${e}-input" name="name" ${n?"disabled":""}>\n    <input id="${e}-color" type="color" class="button ${e}-color" value="#000000" name="color" ${n?"disabled":""}>\n    <button id="${e}-button" type="submit" class="button ${e}-button" ${n?"disabled":""}>${e}</button> \n  </form>\n</div>\n`,n.buttonsBlock=(e,n,t)=>`\n<div>  \n  <button class="button ${e}-button">${e}</button>\n  <button class="button ${n}-button">${n}</button>\n  <button class="button ${t}-button">${t}</button>    \n</div>\n`,n.buttonsBlockTwo=(e,n)=>`\n<div>  \n  <button class="button ${e}-button">${e}</button>\n  <button class="button ${n}-button">${n}</button>    \n</div>\n`,n.carImage2=(e,n)=>`\n<svg id="${n}-car" class="car" version="1.0" xmlns="http://www.w3.org/2000/svg"\n width="60px" height="30px" viewBox="0 0 1280.000000 640.000000"\n preserveAspectRatio="xMidYMid meet">\n<metadata>\nCreated by potrace 1.15, written by Peter Selinger 2001-2017\n</metadata>\n<g transform="translate(0.000000,640.000000) scale(0.100000,-0.100000)"\nfill=${e} stroke="none">\n<path d="M3525 5341 c-72 -18 -79 -28 -90 -121 -4 -30 -11 -62 -16 -71 -4 -9\n-97 -51 -206 -94 -774 -304 -1348 -540 -1603 -661 -163 -77 -222 -91 -421\n-104 -85 -5 -170 -14 -189 -20 -101 -32 -362 -58 -620 -63 l-115 -2 -47 -80\nc-47 -78 -47 -80 -29 -100 34 -36 35 -77 5 -177 -30 -99 -34 -178 -19 -370 5\n-67 4 -88 -6 -88 -29 0 -83 -56 -110 -114 -50 -106 -74 -343 -48 -467 13 -58\n13 -62 3 -159 -5 -54 16 -238 28 -244 2 -1 29 -20 61 -41 73 -49 123 -103 132\n-143 17 -79 167 -155 355 -181 104 -15 969 -97 1087 -104 l32 -2 5 160 c7 230\n50 394 146 559 281 479 917 673 1405 429 316 -159 530 -424 598 -742 22 -106\n29 -365 13 -519 l-8 -82 3002 0 c2855 0 3002 1 2995 18 -33 87 -56 325 -45\n461 28 320 177 567 459 759 399 273 847 282 1243 24 239 -157 397 -392 460\n-687 18 -84 15 -341 -5 -430 -8 -38 -14 -71 -12 -73 7 -8 386 20 478 34 180\n28 253 65 304 152 24 41 28 57 28 127 -1 44 -9 117 -20 163 -18 79 -18 88 -2\n190 31 199 40 306 41 497 1 176 -1 195 -23 260 -46 135 -103 190 -283 274\n-222 104 -633 220 -1168 330 -523 108 -1524 210 -2054 211 l-229 0 -236 139\nc-813 477 -1593 884 -1852 966 -498 157 -1598 195 -2892 100 l-188 -14 -47 30\nc-92 58 -223 89 -297 70z m1912 -311 c13 -45 58 -305 88 -515 33 -226 74 -539\n71 -542 -7 -7 -1672 40 -2054 58 -357 16 -464 56 -573 215 -62 91 -87 225 -59\n326 12 40 56 74 192 148 369 198 799 289 1618 340 246 15 290 16 510 16 l194\n-1 13 -45z m649 10 c383 -36 717 -86 934 -139 210 -52 451 -163 720 -332 141\n-88 379 -259 380 -271 0 -5 -14 -8 -32 -8 -48 0 -114 -37 -140 -78 -24 -39\n-30 -113 -15 -189 l9 -43 -904 0 -904 0 -176 540 -175 540 47 0 c25 0 141 -9\n256 -20z"/>\n<path d="M2617 3125 c-431 -82 -774 -440 -838 -875 -17 -117 -7 -292 24 -410\n113 -436 497 -751 947 -777 507 -29 959 313 1076 813 28 117 26 348 -4 467\n-94 378 -383 670 -760 768 -105 27 -336 34 -445 14z m378 -310 c84 -21 209\n-85 280 -142 116 -94 210 -242 251 -393 23 -87 24 -260 0 -355 -58 -237 -242\n-439 -473 -519 -531 -186 -1074 277 -969 828 30 152 94 274 206 386 111 110\n237 178 385 206 84 16 235 11 320 -11z"/>\n<path d="M2918 2568 c2 -90 7 -167 12 -172 17 -17 108 58 201 166 l51 57 -48\n31 c-52 33 -131 65 -185 75 l-34 6 3 -163z"/>\n<path d="M2591 2700 c-62 -22 -167 -82 -164 -94 3 -13 237 -216 249 -216 7 0\n15 7 18 16 8 20 8 127 -1 232 -7 95 -8 96 -102 62z"/>\n<path d="M3209 2355 c-57 -64 -105 -123 -107 -131 -6 -25 46 -35 157 -29 58 3\n121 8 139 11 33 5 34 6 27 42 -7 44 -64 167 -92 201 l-19 24 -105 -118z"/>\n<path d="M2260 2409 c-31 -44 -68 -133 -77 -186 l-6 -33 155 0 c165 0 201 9\n181 44 -13 24 -204 216 -214 216 -5 0 -22 -18 -39 -41z"/>\n<path d="M2786 2354 c-36 -35 0 -87 44 -64 26 14 26 56 1 70 -25 13 -27 13\n-45 -6z"/>\n<path d="M2751 2186 c-57 -32 -68 -111 -22 -157 43 -42 101 -43 143 -1 42 42\n41 100 -1 143 -33 32 -78 38 -120 15z"/>\n<path d="M2560 2136 c-19 -23 -8 -61 18 -64 44 -7 67 32 36 62 -19 20 -38 20\n-54 2z"/>\n<path d="M3002 2124 c-27 -19 -28 -36 -3 -58 25 -23 61 -6 61 29 0 33 -30 49\n-58 29z"/>\n<path d="M2245 1993 c-77 -6 -76 -5 -59 -65 16 -55 61 -146 92 -186 l18 -23\n103 122 c57 67 104 129 105 138 1 14 -14 16 -104 17 -58 0 -127 -1 -155 -3z"/>\n<path d="M3165 1981 c-44 -4 -61 -10 -63 -22 -3 -16 210 -229 228 -229 22 0\n86 141 105 228 l7 32 -109 -2 c-59 -1 -135 -4 -168 -7z"/>\n<path d="M2776 1914 c-19 -18 -19 -20 -6 -45 6 -11 21 -19 35 -19 20 0 45 24\n45 44 0 10 -32 36 -45 36 -7 0 -21 -7 -29 -16z"/>\n<path d="M2589 1743 c-86 -90 -139 -151 -139 -162 0 -25 179 -101 236 -101\nl27 0 -7 143 c-9 166 -13 187 -35 187 -9 0 -46 -30 -82 -67z"/>\n<path d="M2936 1801 c-6 -10 -24 -168 -29 -258 -3 -60 -2 -63 19 -63 79 0 262\n68 248 92 -5 7 -53 64 -108 126 -93 105 -117 124 -130 103z"/>\n<path d="M10723 3125 c-318 -58 -597 -266 -743 -555 -223 -441 -98 -996 289\n-1288 112 -84 188 -125 311 -166 274 -91 545 -70 802 61 552 282 735 983 392\n1500 -225 339 -651 521 -1051 448z m385 -315 c348 -98 579 -443 532 -796 -67\n-508 -596 -796 -1055 -574 -239 116 -396 352 -412 620 -20 335 192 640 516\n745 122 40 289 42 419 5z"/>\n<path d="M11017 2568 c3 -90 9 -167 14 -172 13 -14 53 18 155 122 l95 97 -23\n18 c-50 40 -189 97 -235 97 -10 0 -11 -33 -6 -162z"/>\n<path d="M10705 2706 c-50 -16 -133 -58 -163 -82 l-23 -19 121 -107 c67 -60\n128 -108 135 -108 23 0 27 39 20 186 -8 162 -4 157 -90 130z"/>\n<path d="M11307 2354 c-59 -65 -107 -126 -107 -136 0 -11 11 -18 38 -22 44 -7\n278 7 289 17 15 16 -51 183 -94 236 l-19 24 -107 -119z"/>\n<path d="M10362 2413 c-39 -62 -70 -134 -78 -184 l-7 -39 152 0 c86 0 161 5\n172 10 17 10 18 13 5 38 -8 15 -59 71 -114 125 l-99 99 -31 -49z"/>\n<path d="M10888 2359 c-24 -14 -23 -56 2 -69 44 -23 80 29 44 64 -18 19 -23\n19 -46 5z"/>\n<path d="M10851 2187 c-49 -29 -66 -101 -35 -146 9 -13 32 -29 50 -37 29 -12\n39 -12 68 0 99 41 85 180 -19 192 -24 3 -50 -1 -64 -9z"/>\n<path d="M10660 2136 c-19 -23 -8 -61 18 -64 44 -7 67 32 36 62 -19 20 -38 20\n-54 2z"/>\n<path d="M11096 2124 c-9 -8 -16 -22 -16 -29 0 -13 26 -45 36 -45 20 0 44 25\n44 45 0 14 -8 29 -19 35 -25 13 -27 13 -45 -6z"/>\n<path d="M10335 1991 c-60 -6 -60 -6 -57 -36 9 -69 104 -248 122 -229 57 61\n210 250 207 258 -4 12 -176 17 -272 7z"/>\n<path d="M11267 1983 c-68 -5 -79 -19 -47 -60 23 -31 200 -193 210 -193 3 0\n20 24 37 53 29 48 52 111 67 180 l6 27 -107 -2 c-60 -1 -134 -3 -166 -5z"/>\n<path d="M10870 1910 c-16 -31 4 -62 38 -58 21 2 28 9 30 32 5 45 -47 65 -68\n26z"/>\n<path d="M10651 1703 c-56 -59 -101 -113 -101 -120 0 -28 172 -103 237 -103\nl26 0 -7 123 c-10 179 -15 207 -36 207 -10 0 -63 -48 -119 -107z"/>\n<path d="M11035 1801 c-7 -12 -23 -144 -29 -243 -4 -77 -4 -78 19 -78 45 0\n130 22 193 51 l64 29 -19 23 c-65 82 -198 227 -209 227 -7 0 -15 -4 -19 -9z"/>\n</g>\n</svg>\n`,n.lineContainer=(e,t,r)=>`\n<div class="car-container" >\n  <button class="button select-car-button" id=${r}>select</button>\n  <button class="button remove-car-button" id=${1e3*r}>remove</button> \n  <span>${t}</span> \n</div>\n<div class="race-line-container">\n  <div class="race-control">\n    <button id="${r}-start" class="button car-start-button">start</button>\n    <button id="${r}-stop" class="button car-stop-button" disabled>stop</button>\n  </div>\n  <div class="car-road">\n      <div class="car">\n       ${(0,n.carImage2)(e,r)}\n      </div>\n     <div class="finish">∏</div>\n  </div>\n  <div class="line"></div>\n</div>\n`,n.tableOfWin=e=>`<table class="table">\n  <thead>\n    <th>Number</th>\n    <th>Car</th>\n    <th>Name</th>\n    <th class="wins">Wins</th>\n    <th class="time">Time</th>    \n  </thead>\n  <tbody>\n    ${e.map(((e,t)=>`\n      <tr>\n        <td>${t+1}</td>\n        <td>${(0,n.carImage2)(e.car.color,t+1)}</td>\n        <td>${e.car.name}</td>\n        <td>${e.wins}</td>\n        <td>${e.time}</td>\n      </tr>\n    `)).join("")}\n  </tbody>\n</table>`},597:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.Garage=void 0;const r=t(978),a=t(843),o=t(478),i=(0,a.inputBlock)("create",!1),s=(0,a.inputBlock)("update",!0),c=(0,a.buttonsBlock)("race","reset","generate-cars"),d=(0,a.buttonsBlockTwo)("prev","next"),l=document.getElementsByClassName("winner-message");class u extends r.Page{constructor(e){super(e)}render(){return l[0].textContent="",o.cars.then((e=>this.container.append(this.createTitle("h3",u.TextObj.headerTitle+e.count)))),o.cars.then((e=>this.container.append(this.createTitle("h4",u.TextObj.secHeader+o.page)))),this.container.insertAdjacentHTML("beforeend",i),this.container.insertAdjacentHTML("beforeend",s),this.container.insertAdjacentHTML("beforeend",c),o.cars.then((e=>e.items.map((e=>this.container.insertAdjacentHTML("beforeend",(0,a.lineContainer)(e.color,e.name,e.id)))))),this.container.insertAdjacentHTML("beforeend",d),this.container}}n.Garage=u,u.TextObj={headerTitle:"Garage   ",secHeader:"Page  "}},706:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.Winners=void 0;const r=t(478),a=t(978),o=t(843),i=(0,o.buttonsBlockTwo)("prevWin","nextWin"),s=document.getElementsByClassName("winner-message");class c extends a.Page{constructor(e){super(e)}render(){return s[0].textContent="",r.winnersCount.then((e=>this.container.append(this.createTitle("h3",c.TextObj.headerTitle+e.count)))),r.winnersCount.then((e=>this.container.append(this.createTitle("h4",c.TextObj.secHeader+r.pageWinners)))),r.winnersCount.then((e=>this.container.insertAdjacentHTML("beforeend",(0,o.tableOfWin)(e.items)))),this.container.insertAdjacentHTML("beforeend",i),this.container}}n.Winners=c,c.TextObj={headerTitle:"Winners   ",secHeader:"Page  "}},637:function(e,n,t){var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(a,o){function i(e){try{c(r.next(e))}catch(e){o(e)}}function s(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,s)}c((r=r.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.generateHundreedCars=void 0;const a=t(478),o=(e,n)=>Math.floor(Math.random()*(e-n)+n),i=["opel","opelek","opelishche","opelushecka","opelundra","opelulechka","opeleshenka","opelenochka","opeluha","opelusechka"],s=["astra","cadett","vectra","zafira","adam","Mokka","wiski","rom","wine","beer"],c="0123456789abcdef";n.generateHundreedCars=()=>r(void 0,void 0,void 0,(function*(){for(let e=0;e<100;e++){let e=i[o(0,9)]+"  "+s[o(0,9)],n="#"+c[o(0,15)]+c[o(0,15)]+c[o(0,15)]+c[o(0,15)]+c[o(0,15)]+c[o(0,15)];yield(0,a.createCar)({name:e,color:n})}}))}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.nc=void 0,t(548),(new(t(257).App)).run()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,